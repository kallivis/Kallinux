##!/bin/sh
#if [[ $myShell == '/bin/zsh' ]]
#then
#
## The following lines were added by compinstall
#zstyle ':completion:*' completer _expand _complete _match
#zstyle ':completion:*' completions 0
#zstyle ':completion:*' format 'Completing %d'
#zstyle ':completion:*' glob 0
#zstyle ':completion:*' group-name ''
#zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' matcher-list '+m:{a-z}={A-Z} r:|[._-]=** r:|=**' '' '' '+m:{a-z}={A-Z} r:|[._-]=** r:|=**'
#zstyle ':completion:*' max-errors 1 numeric
#zstyle ':completion:*' substitute 0
#zstyle :compinstall filename "$HOME/.zshrc"
#
#autoload -Uz compinit
#compinit
## End of lines added by compinstall
#
## Username completion.
## Delete old definitions
#zstyle -d users
## Set explicitly:   zstyle ':completion:*' users mrb04 matt
## Uses /etc/passwd, minus these entries:
#zstyle ':completion:*:*:*:users' ignored-patterns \
#    adm apache bin daemon games gdm halt ident junkbust lp mail mailnull \
#    named news nfsnobody nobody nscd ntp operator pcap postgres radvd \
#    rpc rpcuser rpm shutdown squid sshd sync uucp vcsa xfs backup  bind  \
#    dictd  gnats  identd  irc  man  messagebus  postfix  proxy  sys  www-data \
#    avahi Debian-exim hplip list cupsys haldaemon ntpd proftpd statd
#
## Hostname completion
#zstyle ':completion:*' hosts $( cat $HOME/.hosts* )
#
## File/directory completion, for cd command
#zstyle ':completion:*:cd:*' ignored-patterns '(*/)#lost+found' '(*/)#CVS'
##  and for all commands taking file arguments
#zstyle ':completion:*:(all-|)files' ignored-patterns '(|*/)CVS'
#
## Prevent offering a file (process, etc) that's already in the command line.
#zstyle ':completion:*:(rm|cp|mv|kill|diff|scp):*' ignore-line yes
## (Use Alt-Comma to do something like "mv abcd.efg abcd.efg.old")
#
## Completion selection by menu for kill
#zstyle ':completion:*:*:kill:*' menu yes select
#zstyle ':completion:*:kill:*' force-list always
#zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
#zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
#
## Filename suffixes to ignore during completion (except after rm command)
## This doesn't seem to work
#zstyle ':completion:*:*:(^rm):*:*files' ignored-patterns '*?.o' '*?.c~' '*?.old' '*?.pro' '*~'
#zstyle ':completion:*:(^rm):*' ignored-patterns '*?.o' '*?.c~' '*?.old' '*?.pro' '*~'
#zstyle ':completion:*:(all-|)files' ignored-patterns '(|*/)CVS'
##zstyle ':completion:*:(all-|)files' file-patterns '(*~|\\#*\\#):backup-files' 'core(|.*):core\ files' '*:all-files'
#
#zstyle ':completion:*:*:rmdir:*' file-sort time
#
#zstyle ':completion:*' local matt.blissett.me.uk /web/matt.blissett.me.uk
#
## CD to never select parent directory
#zstyle ':completion:*:cd:*' ignore-parents parent pwd
#
### Use cache
## Some functions, like _apt and _dpkg, are very slow. You can use a cache in
## order to proxy the list of results (like the list of available debian
## packages)
#zstyle ':completion:*' use-cache on
#zstyle ':completion:*' cache-path ~/.zsh/cache
#
## Quick ../../..
#rationalise-dot() {
#    if [[ $LBUFFER = *.. ]]; then
#	LBUFFER+=/..
#    else
#	LBUFFER+=.
#    fi
#}
#zle -N rationalise-dot
#bindkey . rationalise-dot
#
#autoload zsh/sched
#
## Copys word from earlier in the current command line
## or previous line if it was chosen with ^[. etc
#autoload copy-earlier-word
#zle -N copy-earlier-word
#bindkey '^[,' copy-earlier-word
#
## Cycle between positions for ambigous completions
#autoload cycle-completion-positions
#zle -N cycle-completion-positions
#bindkey '^[z' cycle-completion-positions
#
## Increment integer argument
#autoload incarg
#zle -N incarg
#bindkey '^X+' incarg
#
## Write globbed files into command line
#autoload insert-files
#zle -N insert-files
#bindkey '^Xf' insert-files
#
## Play tetris
#autoload -U tetris
#zle -N tetris
#bindkey '^X^T' tetris
#
## xargs but zargs
#autoload -U zargs
#
## Calculator
#autoload zcalc
#
## Line editor
#autoload zed
#
## Renaming with globbing
#autoload zmv
#
## MySQL prompt
#export MYSQL_PS1="\R:\m:\s \h> "
#
#if [[ -x $(which mvn) ]]
#then
#    export MAVEN_OPTS="-DdownloadSources=true -DdownloadJavadocs=true $MAVEN_OPTS"
#fi
#else   
#    if [[ $myShell == '/bin/bash' ]]
#then 
#    echo  " " > /dev/null
#fi
#fi
#
#
